---
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { format } from "date-fns";
import ko from "date-fns/locale/ko/index.js";
import { t } from "i18next";

export interface Props {
  post: CollectionEntry<"posts">;
}

const {
  post: { data, slug },
} = Astro.props;
const createdAt =
  data.created_at && format(data.created_at, "PPP", { locale: ko });
const editedAt =
  data.edited_at && format(data.edited_at, "PPP", { locale: ko });

const series = data.series && (await getEntry(data.series));
---

<div class="list-item" id="list-item">
  <!-- 시리즈 표시 -->
  {
    series && (
      <div class="list-item__series-container">
        <a
          class="list-item__series pressable pressable--opacity"
          href={`/series/${series.slug}`}
        >
          {series.data.title}
        </a>
      </div>
    )
  }
  <a
    href={`/post/${slug}`}
    class="list-item__inner pressable pressable--opacity"
  >
    <!-- A -->
    <h3 class="list-item__title">{data.title}</h3>
    {data.subtitle && <h5 class="list-item__subtitle">{data.subtitle}</h5>}
  </a>
  {
    data.tags?.length && (
      <ul class="list-item__tags">
        {data.tags.map((tag) => (
          <li class="list-item__tag">
            <a
              class="list-item__tag-link pressable pressable--opacity"
              href={`/tag/${tag}`}
            >
              {tag}
            </a>
          </li>
        ))}
      </ul>
    )
  }
  <div class="list-item__meta">
    {
      editedAt && (
        <span class="list-item__date list-item__date--created">
          {t("posts.item.edited", { date: data.edited_at })}
        </span>
      )
    }
    {
      createdAt && (
        <span class="list-item__date list-item__date--created">
          {t("posts.item.created", { date: data.created_at })}
        </span>
      )
    }
  </div>
</div>

<style lang="scss">
  @use "media";
  @use "color";

  .list-item {
    padding: 1.5rem 0;
    position: relative;
    display: block;
    color: color.primary(12);
  }

  .list-item__inner {
    display: block;
  }

  .list-item__title {
    color: color.neutral(12);
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.5rem;
  }

  .list-item__subtitle {
    color: color.neutral(11);
    margin-top: 0.5rem;
    //
    font-size: 0.875rem;
    font-weight: normal;
    line-height: 1.25rem;
    //
    // &::before {
    //   content: "\2014";
    //   padding-right: 0.5rem;
    //   opacity: 0.25;
    // }
  }

  .list-item__meta {
    margin: 0.5rem 0;
    //
    font-size: 0.75rem;
    font-weight: normal;
    line-height: 1rem;
    //
    color: color.primary(11);
    opacity: 0.8;

    text-align: right;
  }

  .list-item__series-container {
    margin-bottom: 1rem;
  }

  .list-item__series {
    padding: 0.125rem 0.25rem;
    border: 1px solid color.neutral(6);
    border-radius: 0.25rem;
    color: color.neutral(11);
    font-weight: 500;
    font-size: 0.875rem;

    &::after {
      content: "\f045"; // rightChevron @ Pretendard
      margin-left: 0.25rem;
    }
  }

  .list-item__date {
    & + &::before {
      content: "\00B7";
      padding: 0 0.5rem;
    }
  }

  .list-item__tags {
    position: relative;
    display: flex;
    flex-flow: row wrap;
    gap: 0.5rem;
    padding: {
      top: 1rem;
      bottom: 0.5rem;
    }
    list-style: none;
    font-size: 0.75rem;
    font-weight: normal;
  }

  .list-item__tag {
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    background-color: color.primary(3);
    color: color.primary(11);
  }

  .list-item__tag-link {
    display: inline;

    &::before {
      content: "#";
      display: inline;
      opacity: 0.25;
    }
  }
</style>
