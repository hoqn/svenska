---
import LinkIcon from "@/components/ui/link-icon";
import { Image } from "astro:assets";
import { format } from "date-fns";
import ko from "date-fns/locale/ko/index.js";
import ScaffoldLayout from "./ScaffoldLayout.astro";
import { getEntry } from "astro:content";

export interface Props {
  header?: {
    title: string;
    subtitle?: string | null;
    edited_at?: Date | null;
    created_at?: Date | null;
    tags?: string[] | null;
    icon?: string | object | null;
    links?: Record<string, string>;
    series?: string;
  };
}

const { header } = Astro.props;

const series =
  header?.series &&
  (await getEntry({ collection: "serieses", slug: header.series }));
---

<ScaffoldLayout
  meta={{
    themeColor: undefined,
  }}
>
  <section class="post-section">
    <slot name="header-wrapper">
      <header class="post-section__header container">
        <slot name="header">
          <!-- Series -->
          {
            series && (
              <div class="post-section__series-container">
                <a
                  class="post-section__series pressable pressable--opacity"
                  href={`/series/${series.slug}`}
                >
                  {series.data.title}
                </a>
              </div>
            )
          }
          {
            header?.icon && (
              <div class="post-section__header-icon">
                {typeof header.icon === "string" ? (
                  <div>{header.icon}</div>
                ) : (
                  <Image
                    src={header.icon as any}
                    alt="글 아이콘"
                    width="72"
                    height="72"
                  />
                )}
              </div>
            )
          }

          <h2 class="post-section__title">{header?.title}</h2>
          {
            header?.subtitle && (
              <h4 class="post-section__subtitle">{header?.subtitle}</h4>
            )
          }

          {
            header?.tags?.length && (
              <ul class="post-section__tags">
                {header.tags.map((tag) => (
                  <li class="post-section__tag">
                    <a href={`/tag/${tag}`}>{tag}</a>
                  </li>
                ))}
              </ul>
            )
          }

          <div class="post-section__meta-container">
            {
              header?.edited_at && (
                <span class="post-section__meta">
                  <span class="post-section__meta-name">수정일</span>
                  <span class="post-section__meta-value">
                    {format(header?.edited_at, "PPP", { locale: ko })}
                  </span>
                </span>
              )
            }
            {
              header?.created_at && (
                <span class="post-section__meta">
                  <span class="post-section__meta-name">작성일</span>
                  <span class="post-section__meta-value">
                    {format(header?.created_at, "PPP", { locale: ko })}
                  </span>
                </span>
              )
            }
          </div>

          {
            header?.links && Object.keys(header.links).length && (
              <div class="post-section__links">
                <ul>
                  {header?.links &&
                    Object.entries(header.links).map(([key, value]) => (
                      <li class="post-section__link">
                        <span class="post-section__link-key">{key}</span>
                        <a
                          class="post-section__link-value"
                          href={value}
                          target="_blank"
                        >
                          <LinkIcon src={value} width="1em" height="1em" />
                          <span>{value}</span>
                        </a>
                      </li>
                    ))}
                </ul>
              </div>
            )
          }
        </slot>
      </header>
    </slot>
    <slot name="body-wrapper">
      <article class="post-body markdown-body">
        <div class="container">
          <slot />
        </div>
      </article>
    </slot>
  </section>
</ScaffoldLayout>

<style lang="scss">
  @use "color";

  :root {
    --html-bg: #{color.neutral(1)} !important;
  }

  .post-section {
    &__header {
      position: relative;
      padding: {
        top: 4rem;
        bottom: 4rem;
      }
      // border-bottom: 1px solid color.primary(6);
      color: color.primary(12);
    }

    &__header-icon {
      font-size: 4rem;
      line-height: 4.5rem;
      margin-bottom: 1rem;
    }

    &__title {
      font-weight: 700;
      font-size: 1.75rem;
      line-height: 2.25rem;
    }

    &__subtitle {
      font-weight: 500;
      font-size: 1.25rem;
      line-height: 1.5rem;
      margin-top: 1rem;
      color: color.neutral(11);
    }

    &__series-container {
      margin-bottom: 1.5rem;
    }

    &__series {
      padding: 0.125rem 0.25rem;
      font-size: 0.875rem;
      font-weight: 500;
      color: color.neutral(11);
      border: 1px solid color.neutral(6);
      border-radius: 0.25rem;

      &::after {
        content: "\f045"; // rightChevron @ Pretendard
        margin-left: 0.25rem;
      }
    }

    &__tags {
      display: flex;
      flex-flow: row wrap;
      margin-top: 1.5rem;
      gap: 0.5rem;
    }

    &__tag {
      display: inline;
      font-size: 0.875rem;
      padding: 0.25rem 0.25rem;
      background-color: color.neutral(3);
      color: color.neutral(11);
      border-radius: 0.25rem;

      > a {
        &::before {
          content: "\0023";
          margin-right: 0.25rem;
          opacity: 0.25;
        }
      }
    }

    &__meta-container {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      line-height: 1.5rem;
      font-size: 0.875rem;
      padding: 0.5rem 1rem;
      background-color: color.primary(3);
      border-radius: 0.25rem;
    }

    &__meta {
      & + & {
        margin-left: 0.5rem;
      }
    }

    &__meta-name {
      font-weight: 600;
      color: color.primary(11);
      margin-right: 0.5rem;
    }

    &__meta-value {
      color: color.primary(12);
    }

    &__links {
      margin-top: 1.5rem;
      margin-left: -1rem;
      margin-right: -1rem;
      margin-bottom: -3rem;
      padding: 1rem;
      background-color: color.primary(3);
    }

    &__link {
      font-size: 0.875rem;

      & + & {
        margin-top: 1rem;
      }

      &-key {
        font-weight: 600;
        color: color.neutral(12);
        margin-right: 0.5rem;
      }

      &-value {
        text-wrap: nowrap;
        font-weight: 400;
        color: color.primary(11);

        > span {
          text-decoration: underline;
        }

        > svg {
          vertical-align: middle;
          fill: currentColor;
        }
      }
    }
  }

  .post-body {
    padding: {
      top: 4rem;
      bottom: 4rem;
    }
  }
  .post-body img {
    object-fit: contain !important;
    max-height: 24rem !important;
  }
</style>
